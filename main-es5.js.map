{"version":3,"sources":["webpack:///commons/index.ts","webpack:///commons/src/lib/commons.module.ts","webpack:///commons/src/lib/components/header/header.component.ts","webpack:///commons/src/lib/components/header/header.component.html","webpack:///commons/src/lib/components/language-menu/language-menu.component.ts","webpack:///commons/src/lib/components/language-menu/language-menu.component.html","webpack:///commons/src/lib/components/login/login.component.ts","webpack:///commons/src/lib/components/login/login.component.html","webpack:///commons/src/lib/components/menu/menu.component.ts","webpack:///commons/src/lib/components/menu/menu.component.html","webpack:///commons/src/lib/components/profile/profile.component.ts","webpack:///commons/src/lib/components/profile/profile.component.html","webpack:///commons/src/lib/material.module.ts","webpack:///commons/src/lib/model/log-levels.model.ts","webpack:///commons/src/lib/pipes/app-config-pipe.ts","webpack:///commons/src/lib/pipes/first-letter-pipe.ts","webpack:///commons/src/lib/services/app.config.service.ts","webpack:///commons/src/lib/services/local-storage.service.ts","webpack:///commons/src/lib/services/locale.service.ts","webpack:///commons/src/lib/services/log.service.ts","webpack:///commons/src/lib/services/user-profile.service.ts","webpack:///commons/src/public-api.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login-demo.component.ts","webpack:///src/app/components/login/login-demo.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["CommonsModule","provide","useFactory","loadConfig","deps","multi","declarations","imports","providers","exports","config","conf","load","HeaderComponent","menuButonClickEvent","event","emit","selector","templateUrl","styleUrls","encapsulation","None","LanguageMenuComponent","localeService","languages","getLanguages","locale","getDefaultLocale","setActiveLocale","language","LoginComponent","sanitizer","title","logoImageUrl","backgroundImageUrl","disabled","login","initForm","formGroup","username","required","password","valid","value","bypassSecurityTrustStyle","onSubmit","MenuComponent","menuSideNavClickEvent","menu","ProfileComponent","profileClick","onProfileClick","modules","MaterialModule","LogLevelsEnum","Number","TRACE","DEBUG","INFO","WARN","ERROR","SILENT","logLevels","level","name","AppConfigPipe","get","FirstLetterPipe","substring","toUpperCase","AppConfigService","http","key","Promise","resolve","reject","map","res","error","json","subscribe","responseData","providedIn","LocalStorageService","localStorage","setItem","getItem","LocaleService","translate","userProfileService","document","direction","body","setAttribute","getAttribute","label","getLocale","getBrowserLang","find","e","use","setTextOrientation","setLocale","Document","LogService","appConfigService","onMessage","message","currentLogLevel","messageBus","optionalParams","console","debug","info","log","trace","warn","test","assert","groupTitle","group","groupEnd","referencedLevel","currentLevel","toLocaleLowerCase","logLevel","next","text","type","configLevel","getLogLevel","UserProfileService","localStorageService","userPrefix","set","getApplicationId","LOCALE_PREFIX","webpackEmptyAsyncContext","req","then","Error","code","keys","module","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","AppComponent","logService","router","over","header","showMenuIcon","toolbarColor","logo","menuData","icon","route","setDefaultLang","setUserPrefix","userFirstName","userLastName","navigate","host","initials","changeRouteLink","AppModule","loader","TranslationLoaderFactory","bootstrap","prefix","suffix","HomeComponent","LoginDemoComponent","onLogin","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["export * from './src/public-api';\r\n","import { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MenuComponent } from './components/menu/menu.component';\r\nimport { AppConfigService } from './services/app.config.service';\r\nimport { AppConfigPipe } from './pipes/app-config-pipe';\r\nimport { LogService } from './services/log.service';\r\nimport { LocalStorageService } from './services/local-storage.service';\r\nimport { LanguageMenuComponent } from './components/language-menu/language-menu.component';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport { UserProfileService } from './services/user-profile.service';\r\nimport { LocaleService } from './services/locale.service';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { FirstLetterPipe } from './pipes/first-letter-pipe';\r\n\r\nimport { MaterialModule } from './material.module';\r\n@NgModule({\r\n  declarations: [HeaderComponent, MenuComponent, AppConfigPipe, LoginComponent, LanguageMenuComponent, ProfileComponent, FirstLetterPipe],\r\n  imports: [\r\n    CommonModule,\r\n    MatToolbarModule,\r\n    FlexLayoutModule,\r\n    MaterialModule,\r\n    TranslateModule\r\n  ],\r\n  providers: [\r\n    TranslateService,\r\n    { provide: APP_INITIALIZER, useFactory: loadConfig,\r\n      deps: [AppConfigService, UserProfileService, LocalStorageService, LogService, LocaleService], multi: true },\r\n  ],\r\n  exports: [HeaderComponent, MenuComponent, AppConfigPipe, LanguageMenuComponent, LoginComponent, ProfileComponent, FirstLetterPipe]\r\n})\r\nexport class CommonsModule { }\r\n\r\nexport function loadConfig(config: AppConfigService) {\r\n  const conf = () => config.load();\r\n  return conf;\r\n}\r\n","import { Component, Input, ViewEncapsulation, Output, EventEmitter, } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mnl-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class HeaderComponent {\r\n\r\n  @Input()\r\n  header: any;\r\n\r\n  @Output()\r\n  menuButonClickEvent: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  menuClick(event) {\r\n    this.menuButonClickEvent.emit(event);\r\n  }\r\n}\r\n","<mat-toolbar *ngIf=\"header\" color=\"{{header.toolbarColor }}\">\r\n  <mat-toolbar-row>\r\n    <div fxFlex=85>\r\n      <button mat-icon-button *ngIf=\"header.showMenuIcon\">\r\n        <mat-icon (click)=\"menuClick($event)\">menu</mat-icon>\r\n      </button>\r\n      <img class=\"mnl-logo\" src=\"{{header.logo}}\">\r\n      <span>{{header.name}}</span>\r\n    </div>\r\n    <div fxFlex=15 fxLayoutAlign=\"end\">\r\n      <button mat-menu-item [matMenuTriggerFor]=\"langMenu\">\r\n        <mat-icon>language</mat-icon>\r\n        <span>{{ 'DEMO.MENU.LANGUAGES' | translate }}</span>\r\n      </button>\r\n      <mat-menu #langMenu=\"matMenu\">\r\n        <mnl-commons-language-menu></mnl-commons-language-menu>\r\n      </mat-menu>\r\n    </div>\r\n    <div fxLayoutAlign=\"end center\" fxFlex>\r\n      <ng-content select=`[mnl-header-user-profile]`></ng-content>\r\n    </div>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\r\nimport { LocaleService, LanguageItem } from '../../services/locale.service';\r\n\r\n@Component({\r\n  selector: 'mnl-commons-language-menu',\r\n  templateUrl: './language-menu.component.html',\r\n  styleUrls: ['./language-menu.component.scss']\r\n})\r\nexport class LanguageMenuComponent implements OnInit {\r\n  languages: Array<LanguageItem> = [];\r\n  locale: LanguageItem;\r\n  constructor(private localeService: LocaleService) { }\r\n\r\n  ngOnInit() {\r\n    this.languages = this.localeService.getLanguages();\r\n    this.locale = this.localeService.getDefaultLocale();\r\n    this.localeService.setActiveLocale(this.locale);\r\n}\r\n\r\n  onChangeLanguage(language: LanguageItem) {\r\n  this.localeService.setActiveLocale(language);\r\n  }\r\n}\r\n","<button mat-menu-item *ngFor=\"let language of languages\" (click)=\"onChangeLanguage(language)\">{{language.label}}\r\n    </button>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { UserModel } from '../../model/user-model';\r\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\r\n@Component({\r\n  selector: 'mnl-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  formGroup: FormGroup;\r\n\r\n  @Input()\r\n  title = '';\r\n\r\n  @Input()\r\n  logoImageUrl = './assets/images/logo.png';\r\n\r\n  @Input()\r\n  backgroundImageUrl = './assets/images/background.jpg';\r\n\r\n  @Input()\r\n  disabled = false;\r\n\r\n  @Output()\r\n  login  = new EventEmitter<UserModel>();\r\n\r\n  constructor(private sanitizer: DomSanitizer) {\r\n\r\n  }\r\n  ngOnInit() {\r\n    this.initForm();\r\n  }\r\n\r\n  private initForm() {\r\n    this.formGroup = new FormGroup({\r\n      username: new FormControl('', [Validators.required]),\r\n      password: new FormControl('', [Validators.required])\r\n    });\r\n  }\r\n  onSubmit() {\r\n    if (this.formGroup.valid) {\r\n      this.login .emit(this.formGroup.value);\r\n    }\r\n  }\r\n  getBackgroundImageUrl(): SafeStyle {\r\n    return this.sanitizer.bypassSecurityTrustStyle(`url(${this.backgroundImageUrl})`);\r\n}\r\n\r\n}\r\n","<div fxLayoutAlign=\"center center\" class=\"mnl-login-container\" fxFlexFill [style.background-image]=\"getBackgroundImageUrl()\">\r\n    \r\n    <mat-card  class=\"mnl-login-card\" >\r\n        <form fxLayoutAlign=\"stretch\" fxLayout=\"column\" [formGroup] =\"formGroup\" (ngSubmit)=\"onSubmit()\">\r\n            <mat-card-header fxLayoutAlign=\"center center\">\r\n                <mat-card-title >\r\n                    <img  *ngIf =\"logoImageUrl\"  src =\"{{logoImageUrl}}\" >\r\n                </mat-card-title>\r\n            </mat-card-header>\r\n            <h3  fxLayoutAlign=\"center center\" *ngIf=\"title\">{{title | translate}}</h3>\r\n                <mat-form-field fxFlex=\"100\" >\r\n                    <input matInput placeholder=\"{{'MNL.LOGIN.USERNAME' | translate}}\" formControlName=\"username\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field fxFlex=\"100\" >\r\n                    <input matInput type=\"password\" placeholder=\"{{'MNL.LOGIN.PASSWORD' | translate}}\" formControlName=\"password\">\r\n                </mat-form-field>\r\n            <mat-card-actions fxLayoutAlign=\"center center\">\r\n            <button mat-raised-button color=\"accent\" [disabled]=\"disabled || !formGroup.valid\" type=\"submit\"> {{'MNL.LOGIN.LOGIN_BUTTON' | translate}}</button>\r\n            </mat-card-actions>\r\n            \r\n        </form>\r\n    </mat-card>\r\n</div>","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mnl-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.scss']\r\n})\r\nexport class MenuComponent {\r\n\r\n  @Input()\r\n  menuData: any;\r\n\r\n  @Output()\r\n  menuSideNavClickEvent: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  onSidenavClose(menu) {\r\n    this.menuSideNavClickEvent.emit(menu);\r\n  }\r\n}\r\n","\r\n    <mat-nav-list  *ngFor = \"let menu of menuData\" >\r\n        <a  mat-list-item  fxLayout=\"row\" > \r\n            <mat-icon (click)=\"onSidenavClose(menu)\" >{{menu.icon}}</mat-icon> <span class=\"mnl-menu\" (click)=\"onSidenavClose(menu)\">{{menu.name}}</span>\r\n        \t<mat-icon class=\"mnl-menu-button\"  *ngIf=\"menu.showExpendIcon\" (click)=\"menu.isExpanded =!menu.isExpanded\"[ngClass]=\"{'mnl-rotated' : menu.isExpanded}\" >expand_more</mat-icon>\r\n        </a>\r\n        <a  mat-list-item fxLayout=\"row\" class=\"mnl-submenu\" [ngClass]=\"{'mnl-expanded' : menu.isExpanded}\" *ngIf=\"menu.isExpanded\">\r\n            <div  *ngFor = \"let sub of menu.subMenu\"> \r\n                <div fxLayout=\"row\"(click)=\"onSidenavClose(sub)\"> \r\n                    <mat-icon >{{sub.icon}}</mat-icon> <span class=\"mnl-menu\">{{sub.name}}</span>\r\n                </div>\r\n            </div>\r\n        </a>\r\n</mat-nav-list >\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mnl-user-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent {\r\n\r\n  @Input()\r\n  firstName: string;\r\n\r\n  @Input()\r\n  lastName: string;\r\n\r\n  @Output()\r\n  profileClick: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  onProfileClick(event: any) {\r\n    this.profileClick.emit(event);\r\n  }\r\n\r\n}\r\n","<div id=\"mnl-profile-container\" fxLayoutGap=\"15px\">\r\n  <span id=\"mnl-userinfo-name\" fxHide.xs>{{firstName}} {{lastName}}</span>\r\n  <button id=\"mnl-initials-button\" mat-raised-button (click)=\"onProfileClick($event)\"\r\n    mat-icon-button>{{firstName | mnlFirstLetter}}{{lastName | mnlFirstLetter}}</button>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport {  MatCardModule} from '@angular/material/card';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nexport function modules() {\r\n    return [\r\n       MatButtonModule, MatCardModule, MatFormFieldModule, MatIconModule,\r\n       MatInputModule, MatListModule, FormsModule,\r\n       ReactiveFormsModule, MatMenuModule\r\n    ];\r\n  }\r\n@NgModule({\r\n    imports: modules(),\r\n    exports: modules()\r\n})\r\nexport class MaterialModule {\r\n}\r\n","export class LogLevelsEnum extends Number {\r\n    static TRACE = 5;\r\n    static DEBUG = 1;\r\n    static INFO = 2;\r\n    static WARN = 3;\r\n    static ERROR = 4;\r\n    static SILENT = 0;\r\n}\r\n\r\nexport let logLevels: any[] = [\r\n    {level: LogLevelsEnum.TRACE, name: 'TRACE'},\r\n    {level: LogLevelsEnum.DEBUG, name: 'DEBUG'},\r\n    {level: LogLevelsEnum.INFO, name: 'INFO'},\r\n    {level: LogLevelsEnum.WARN, name: 'WARN'},\r\n    {level: LogLevelsEnum.ERROR, name: 'ERROR'},\r\n    {level: LogLevelsEnum.SILENT, name: 'SILENT'}\r\n];\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { AppConfigService } from '../services/app.config.service';\r\n\r\n@Pipe({\r\n    name: 'mnlAppConfig'\r\n})\r\nexport class AppConfigPipe implements PipeTransform {\r\n    constructor(private config: AppConfigService) {}\r\n\r\n    transform(value: string): any {\r\n        return this.config.get(value);\r\n    }\r\n}\r\n","import { PipeTransform, Pipe } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'mnlFirstLetter'\r\n})\r\nexport class FirstLetterPipe implements PipeTransform {\r\n\r\n  transform(value: string) {\r\n    return value ? value.substring(0, 1).toUpperCase() : null;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport { throwError } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class AppConfigService {\r\n\r\n    private config: object = null;\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    /**\r\n     * Use to get the data found in the file (config file)\r\n     */\r\n    public get(key: any) {\r\n        return this.config[key];\r\n    }\r\n\r\n    /**\r\n     * This method:\r\n     *   Loads \"config.json\" to get all variables (e.g.: 'app.config.json')\r\n     */\r\n    public load() {\r\n        return new Promise((resolve, reject) => {\r\n            this.http.get('assets/app.config.json').map( res => res )\r\n                        .catch((error: any) => {\r\n                            resolve(error);\r\n                            return throwError(error.json().error || 'Server error');\r\n                        })\r\n                        .subscribe((responseData) => {\r\n                            this.config = responseData;\r\n                            resolve(true);\r\n                        });\r\n                });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class LocalStorageService {\r\n    set(key, value) {\r\n        localStorage.setItem(key, value);\r\n    }\r\n    get(key): string {\r\n        return localStorage.getItem(key);\r\n    }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { AppConfigService } from './app.config.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { UserProfileService } from './user-profile.service';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Direction } from '@angular/cdk/bidi';\r\n\r\n/** @dynamic */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocaleService {\r\n  locale: string;\r\n  languages: Array<LanguageItem> = [];\r\n  constructor(private config: AppConfigService,\r\n              private translate: TranslateService,\r\n              private userProfileService: UserProfileService,\r\n              @Inject(DOCUMENT) private document: Document) {\r\n              }\r\n\r\n  setTextOrientation(direction) {\r\n    document.body.setAttribute('dir', direction);\r\n}\r\n\r\n  getTextOrientation(): string {\r\n  return document.body.getAttribute('dir');\r\n}\r\n\r\n  getLanguages(): Array<LanguageItem> {\r\n    this.languages = this.config.get('languages');\r\n    if (!this.languages) {\r\n      this.languages = [\r\n      {\r\n        key: 'fr',\r\n        label: 'French',\r\n        direction: 'ltr'\r\n    },\r\n      {\r\n        key: 'de',\r\n        label: 'German',\r\n        direction: 'ltr'\r\n    },\r\n      {\r\n        key: 'en',\r\n        label: 'English',\r\n        direction: 'ltr'\r\n    },\r\n      {\r\n      key: 'ar',\r\n      label: 'Arabic',\r\n      direction: 'rtl'\r\n  }\r\n    ];\r\n  }\r\n    return this.languages;\r\n}\r\n  getDefaultLocale(): LanguageItem {\r\n  this.locale = this.userProfileService.getLocale();\r\n  if (!this.locale) {\r\n    // tslint:disable-next-line: max-line-length\r\n    this.locale = this.config.get('locale') ? this.config.get('locale') : this.translate.getBrowserLang() ? this.translate.getBrowserLang() : 'en';\r\n  }\r\n  return this.languages.find((e) => e.key === this.locale);\r\n}\r\n\r\n  getActiveLocale(): LanguageItem {\r\n  if (this.userProfileService.getLocale()) {\r\n    return this.languages.find((e) => e.key === this.userProfileService.getLocale());\r\n  }\r\n}\r\n\r\n  setActiveLocale(locale: LanguageItem) {\r\n    if (locale) {\r\n    this.translate.use(locale.key);\r\n    this.setTextOrientation(locale.direction);\r\n    this.userProfileService.setLocale(locale.key);\r\n  }\r\n}\r\n}\r\nexport interface LanguageItem {\r\n  key: string;\r\n  label: string;\r\n  direction?: Direction;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AppConfigService } from './app.config.service';\r\nimport { logLevels, LogLevelsEnum } from '../model/log-levels.model';\r\nimport { Subject } from 'rxjs';\r\n// tslint:disable: no-console\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogService {\r\n\r\n  onMessage: Subject<any>;\r\n  constructor(private appConfigService: AppConfigService) {\r\n    this.onMessage = new Subject();\r\n  }\r\n  get currentLogLevel() {\r\n    const configLevel: string = this.appConfigService.get('logLevel');\r\n\r\n    if (configLevel) {\r\n      return this.getLogLevel(configLevel);\r\n    }\r\n\r\n    return LogLevelsEnum.ERROR;\r\n  }\r\n\r\n  error(message?: any, ...optionalParams: any[]) {\r\n    if (this.currentLogLevel >= LogLevelsEnum.ERROR) {\r\n\r\n      this.messageBus(message, 'ERROR');\r\n\r\n      console.error(message, ...optionalParams);\r\n    }\r\n  }\r\n\r\n  debug(message?: any, ...optionalParams: any[]) {\r\n    if (this.currentLogLevel >= LogLevelsEnum.DEBUG) {\r\n\r\n      this.messageBus(message, 'DEBUG');\r\n\r\n      console.debug(message, ...optionalParams);\r\n    }\r\n  }\r\n\r\n  info(message?: any, ...optionalParams: any[]) {\r\n    if (this.currentLogLevel >= LogLevelsEnum.INFO) {\r\n\r\n      this.messageBus(message, 'INFO');\r\n\r\n      console.info(message, ...optionalParams);\r\n    }\r\n  }\r\n\r\n  log(message?: any, ...optionalParams: any[]) {\r\n    if (this.currentLogLevel >= LogLevelsEnum.TRACE) {\r\n\r\n      this.messageBus(message, 'LOG');\r\n\r\n      console.log(message, ...optionalParams);\r\n    }\r\n  }\r\n\r\n  trace(message?: any, ...optionalParams: any[]) {\r\n    if (this.currentLogLevel >= LogLevelsEnum.TRACE) {\r\n\r\n      this.messageBus(message, 'TRACE');\r\n\r\n      console.trace(message, ...optionalParams);\r\n    }\r\n  }\r\n\r\n  warn(message?: any, ...optionalParams: any[]) {\r\n    if (this.currentLogLevel >= LogLevelsEnum.WARN) {\r\n\r\n      this.messageBus(message, 'WARN');\r\n\r\n      console.warn(message, ...optionalParams);\r\n    }\r\n  }\r\n\r\n  assert(test?: boolean, message?: string, ...optionalParams: any[]) {\r\n    if (this.currentLogLevel !== LogLevelsEnum.SILENT) {\r\n\r\n      this.messageBus(message, 'ASSERT');\r\n\r\n      console.assert(test, message, ...optionalParams);\r\n    }\r\n  }\r\n\r\n  group(groupTitle?: string, ...optionalParams: any[]) {\r\n    if (this.currentLogLevel !== LogLevelsEnum.SILENT) {\r\n      console.group(groupTitle, ...optionalParams);\r\n    }\r\n  }\r\n\r\n  groupEnd() {\r\n    if (this.currentLogLevel !== LogLevelsEnum.SILENT) {\r\n      console.groupEnd();\r\n    }\r\n  }\r\n  getLogLevel(level: string): LogLevelsEnum {\r\n    const referencedLevel = logLevels.find((currentLevel: any) => {\r\n      return currentLevel.name.toLocaleLowerCase() === level.toLocaleLowerCase();\r\n    });\r\n\r\n    return referencedLevel ? referencedLevel.level : 4;\r\n  }\r\n\r\n  messageBus(message: string, logLevel: string) {\r\n    this.onMessage.next({ text: message, type: logLevel });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {AppConfigService} from './app.config.service';\r\nimport {LocalStorageService} from './local-storage.service';\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class UserProfileService {\r\n    static LOCALE_PREFIX = '____locale';\r\n    userPrefix = '';\r\n    constructor(private appConfigService: AppConfigService, private localStorageService: LocalStorageService) {}\r\n    getApplicationId(): string {\r\n        return this.appConfigService.get('applicationId') ? this.appConfigService.get('applicationId') : '';\r\n    }\r\n    setUserPrefix(userPrefix) {\r\n        this.userPrefix = userPrefix;\r\n    }\r\n    getUserPrefix(): string {\r\n        return  this.userPrefix  ? this.userPrefix : '';\r\n    }\r\n    setLocale(locale) {\r\n        this.localStorageService.set( this.getApplicationId() + this.userPrefix + UserProfileService.LOCALE_PREFIX  ,   locale);\r\n    }\r\n    getLocale(): string {\r\n        return this.localStorageService.get(this.getApplicationId() + this.userPrefix + UserProfileService.LOCALE_PREFIX);\r\n    }\r\n}\r\n","/*\r\n * Public API Surface of mnl-commons\r\n */\r\nexport * from './lib/material.module';\r\nexport * from './lib/commons.module';\r\nexport * from './lib/components/menu/menu.component';\r\nexport * from './lib/components/header/header.component';\r\nexport * from './lib/services/app.config.service';\r\nexport * from './lib/pipes/app-config-pipe';\r\nexport * from './lib/services/log.service';\r\nexport * from './lib/model/log-levels.model';\r\nexport * from './lib/services/user-profile.service';\r\nexport * from './lib/services/local-storage.service';\r\nexport * from './lib/components/language-menu/language-menu.component';\r\nexport * from './lib/services/locale.service';\r\nexport * from './lib/components/login/login.component';\r\nexport * from './lib/model/user-model';\r\nexport * from './lib/pipes/first-letter-pipe';\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginDemoComponent } from './components/login/login-demo.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\n\r\nconst routes: Routes = [\r\n  {path: 'login', component: LoginDemoComponent},\r\n  {path: 'home', component: HomeComponent},\r\n  {path: '', redirectTo: 'home', pathMatch: 'full'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, ViewChild, OnInit } from '@angular/core';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport { AppConfigService, LogService, UserProfileService } from '@muraai/mnl-commons';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'demo-app';\r\n  over = 'over';\r\n  routeUrl: string;\r\n  host: string;\r\n  userPrefix: string;\r\n  locale: string;\r\n  header = {\r\n    name: 'Demo-App', showMenuIcon: true,\r\n    toolbarColor: 'primary', logo: 'http://muraai.com/wp-content/uploads/2019/12/new.png'\r\n  };\r\n  menuData = [{ name: 'home',  icon: 'home', route: '/home' },\r\n              { name: 'Login', icon: 'login', route: '/login' }];\r\n  @ViewChild('sidenav') sidenav: MatSidenav;\r\n  userFirstName: string;\r\n  userLastName: string;\r\n  initials: any;\r\n\r\n  constructor(private config: AppConfigService, private logService: LogService,\r\n              private userProfileService: UserProfileService, private translate: TranslateService,\r\n              private router: Router) {\r\n              }\r\n\r\n  ngOnInit() {\r\n    this.translate.setDefaultLang('en');\r\n    this.userProfileService.setUserPrefix('demo');\r\n    this.logService.info('this is info ');\r\n    this.userFirstName = 'John';\r\n    this.userLastName = 'Smith';\r\n  }\r\n\r\n  changeRouteLink(event) {\r\n    this.router.navigate([event.route]);\r\n  }\r\n\r\n  // to get the key value from app.config.json using AppConfig service\r\n  getConfigValue() {\r\n    this.host = this.config.get('host');\r\n  }\r\n\r\n  onProfileClick(event: any) {\r\n    this.initials = event;\r\n  }\r\n\r\n}\r\n","<mnl-header (menuButonClickEvent)=\"sidenav.toggle()\" [header]=\"header\">\r\n  <mnl-user-profile mnl-header-user-profile [firstName]=\"userFirstName\" [lastName]=\"userLastName\"\r\n    (profileClick)=\"onProfileClick($event)\"></mnl-user-profile>\r\n</mnl-header>\r\n\r\n<mat-sidenav-container>\r\n    <mat-sidenav #sidenav [mode]=\"over\">\r\n      <mnl-menu [menuData]= \"menuData\" (menuSideNavClickEvent) =\"changeRouteLink($event); sidenav.toggle()\"></mnl-menu>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n      <div style=\"height: 88vh;\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CommonsModule } from '@muraai/mnl-commons';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { MultiTranslateHttpLoader } from 'ngx-translate-multi-http-loader';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { LoginDemoComponent } from './components/login/login-demo.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginDemoComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    CommonsModule,\r\n    MatSidenavModule,\r\n    BrowserAnimationsModule,\r\n    MatIconModule,\r\n    HttpClientModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: TranslationLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  exports: [\r\n    TranslateModule\r\n  ]\r\n})\r\nexport class AppModule { }\r\n\r\nexport function TranslationLoaderFactory(http: HttpClient) {\r\n  return new MultiTranslateHttpLoader(http, [\r\n    { prefix: './assets/i18n/', suffix: '.json' },\r\n    { prefix: './assets/mnl-commons/i18n/', suffix: '.json' }\r\n  ]);\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent {\r\n}\r\n","<span>{{ 'application' | mnlAppConfig }}</span>","import { Component, OnInit } from '@angular/core';\r\nimport { LogService, UserModel } from '@muraai/mnl-commons';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login-demo.component.html',\r\n  styleUrls: ['./login-demo.component.scss']\r\n})\r\nexport class LoginDemoComponent  {\r\n   constructor(private logService: LogService) { }\r\n\r\n   onLogin(event: UserModel) {\r\n      this.logService.info(event);\r\n   }\r\n\r\n}\r\n","<mnl-login  (login) =\"onLogin($event)\"></mnl-login>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"]}